import { useState, useEffect } from "react";
import { useParams, useNavigate, Link } from "react-router";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import { ArrowLeft, Save } from "lucide-react";
import { tmdbApi } from "../api/tmdbApi";
import { movieApi } from "../api/movieApi";

export default function MovieNotePage() {
  const { id } = useParams();
  const navigate = useNavigate();
  const [movie, setMovie] = useState(null);
  const [note, setNote] = useState("");
  const [isLoading, setIsLoading] = useState(true);
  const [isSaving, setIsSaving] = useState(false);
  const [existingNote, setExistingNote] = useState(null);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const [movieData, noteData] = await Promise.all([
          tmdbApi.getMovieDetails(id),
          movieApi.getMovieNote(id).catch(() => null), // Note might not exist
        ]);

        setMovie(movieData);
        if (noteData) {
          setExistingNote(noteData);
          setNote(noteData.content);
        }
      } catch (error) {
        console.error("Failed to fetch data:", error);
      } finally {
        setIsLoading(false);
      }
    };

    fetchData();
  }, [id]);

  const handleSave = async () => {
    if (!note.trim()) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏ô‡πâ‡∏ï‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å");
      return;
    }

    setIsSaving(true);
    try {
      if (existingNote) {
        await movieApi.updateMovieNote(existingNote.id, { content: note });
      } else {
        await movieApi.createMovieNote({
          movie_id: id,
          content: note,
        });
      }

      alert("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÇ‡∏ô‡πâ‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
      navigate(`/movie/${id}`);
    } catch (error) {
      console.error("Failed to save note:", error);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å");
    } finally {
      setIsSaving(false);
    }
  };

  if (isLoading) {
    return <div className="text-center">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>;
  }

  if (!movie) {
    return <div className="text-center">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏±‡∏á</div>;
  }

  const posterUrl = movie.poster_path
    ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`
    : "/placeholder-movie.jpg";

  return (
    <div className="space-y-6">
      <Button asChild variant="ghost">
        <Link to={`/movie/${id}`}>
          <ArrowLeft className="mr-2 h-4 w-4" />
          ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏ô‡∏±‡∏á
        </Link>
      </Button>

      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        {/* Movie Info */}
        <div className="md:col-span-1">
          <Card>
            <CardContent className="pt-6">
              <img
                src={posterUrl}
                alt={movie.title}
                className="w-full rounded-lg mb-4"
              />
              <h3 className="font-semibold text-lg mb-2">{movie.title}</h3>
              <p className="text-sm text-muted-foreground">
                {new Date(movie.release_date).getFullYear()}
              </p>
            </CardContent>
          </Card>
        </div>

        {/* Note Editor */}
        <div className="md:col-span-3">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                üìù {existingNote ? "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏ô‡πâ‡∏ï" : "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏ô‡πâ‡∏ï‡πÉ‡∏´‡∏°‡πà"}
              </CardTitle>
              <CardDescription>
                ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô ‡∏ö‡∏ó‡∏ß‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡πå ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏ô‡πâ‡∏ï‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <Label htmlFor="note">‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÇ‡∏ô‡πâ‡∏ï</Label>
                <Textarea
                  id="note"
                  placeholder="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏ô‡πâ‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà..."
                  value={note}
                  onChange={(e) => setNote(e.target.value)}
                  rows={15}
                  className="mt-2"
                />
                <p className="text-sm text-muted-foreground mt-1">
                  {note.length} ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
                </p>
              </div>

              <div className="flex gap-2">
                <Button
                  onClick={handleSave}
                  disabled={isSaving || !note.trim()}
                  className="flex items-center gap-2"
                >
                  <Save className="h-4 w-4" />
                  {isSaving ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å..." : "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÇ‡∏ô‡πâ‡∏ï"}
                </Button>

                <Button asChild variant="outline">
                  <Link to={`/movie/${id}`}>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</Link>
                </Button>
              </div>
            </CardContent>
          </Card>

          {/* Tips */}
          <Card className="mt-4">
            <CardHeader>
              <CardTitle className="text-base">
                üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏ô‡πâ‡∏ï
              </CardTitle>
            </CardHeader>
            <CardContent>
              <ul className="text-sm text-muted-foreground space-y-1">
                <li>‚Ä¢ ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÅ‡∏£‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏î‡∏π‡∏´‡∏ô‡∏±‡∏á</li>
                <li>‚Ä¢ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏â‡∏≤‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö‡πÉ‡∏à</li>
                <li>‚Ä¢ ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏∑‡πà‡∏ô</li>
                <li>‚Ä¢ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•</li>
              </ul>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}
